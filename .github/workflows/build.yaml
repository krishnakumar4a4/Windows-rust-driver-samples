on:
  push:
  pull_request:
  merge_group:
  schedule: # Trigger a job on default branch at 4AM PST everyday
    - cron: "0 11 * * *"

name: Build

env:
  RUSTFLAGS: >-
    -D warnings
    -C target-feature=+crt-static

jobs:
  build:
    name: Build
    runs-on: windows-latest
    continue-on-error: true # Since remaining jobs are just cancelled on one job failure, we could allow them to finish and report the errors
    strategy:
      matrix:
        wdk:
          - Microsoft.WindowsWDK.10.0.22621 # NI WDK

        llvm:
          - 17.0.6

        rust_toolchain:
          - stable
          - beta
          - nightly

        cargo_profile:
          - dev
          - release

        target_triple:
          - name: x86_64-pc-windows-msvc
            arch: x64
          - name: aarch64-pc-windows-msvc
            arch: arm64

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Install Winget
        uses: ./.github/actions/winget-install
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Install LLVM ${{ matrix.llvm }}
        run: |
          if ((Get-WinGetPackage -Id LLVM -Source winget -MatchOption Equals).InstalledVersion -eq '${{ matrix.llvm }}') {
            Write-Host "LLVM ${{ matrix.llvm }} is already installed."
          } else {
            Write-Host "Installing LLVM ${{ matrix.llvm }}..."
            Install-WinGetPackage -Id LLVM.LLVM -Version ${{ matrix.llvm }} -Source winget -MatchOption Equals -Mode Silent -Force
          }
          clang --version

      - name: Install WDK (${{ matrix.wdk }})
        run: |
          if ((Get-WinGetPackage -Id ${{ matrix.wdk }} -Source winget -MatchOption Equals).Id -eq '${{ matrix.wdk }}') {
            Write-Host "${{ matrix.wdk }} is already installed. Attempting to update..."
            Update-WinGetPackage -Id ${{ matrix.wdk }} -Source winget -MatchOption Equals -Mode Silent -Force
          } else {
            Write-Host "Installing ${{ matrix.wdk }}..."
            Install-WinGetPackage -Id ${{ matrix.wdk }} -Source winget -MatchOption Equals -Mode Silent -Force
          }

      - name: Install Rust Toolchain (${{ matrix.rust_toolchain }})
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{ matrix.rust_toolchain }}
          targets: ${{ matrix.target_triple.name }}

      - name: Run Cargo Build
        run: cargo +${{ matrix.rust_toolchain }} build --locked --profile ${{ matrix.cargo_profile }} --target ${{ matrix.target_triple.name }} --workspace

      # Steps to use cargo-wdk to build and package drivers (skipping for arm64 as the base runner image is x86_64)
      - name: Install cargo-wdk binary
        if: ${{ matrix.target_triple.arch != 'arm64' }}
        run: cargo +${{ matrix.rust_toolchain }} install --git https://github.com/svasista-ms/windows-drivers-rs.git cargo-wdk --branch integrate-cargo-wdk --locked --profile ${{ matrix.cargo_profile }} --target ${{ matrix.target_triple.name }} --force

      - name: Build and Package Sample Drivers in the workspace with cargo-wdk
        if: ${{ matrix.target_triple.arch != 'arm64' }}
        run: cargo +${{ matrix.rust_toolchain }} wdk build --profile ${{ matrix.cargo_profile }} --target-arch ${{ matrix.target_triple.arch }}

      # Steps to use cargo-make to build and package drivers
      - name: Install Cargo Make
        uses: taiki-e/install-action@v2
        with:
          tool: cargo-make

      - name: Build and Package Sample Drivers
        run: cargo make default +${{ matrix.rust_toolchain }} --locked --profile ${{ matrix.cargo_profile }} --target ${{ matrix.target_triple.name }}
